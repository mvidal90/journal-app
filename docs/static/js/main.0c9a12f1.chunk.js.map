{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoutes.js","routers/PrivateRoutes.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducers.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","console","log","secure_url","loadNotes","uid","collection","get","noteSnap","notes","forEach","snapChild","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NoteAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoutes","isLoggedIn","Component","rest","props","PrivateRoutes","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0c9a12f1.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA1bry939hMvGCB4icsBZz4mmDSU3kAsJE\",\r\n    authDomain: \"react-apps---curso.firebaseapp.com\",\r\n    projectId: \"react-apps---curso\",\r\n    storageBucket: \"react-apps---curso.appspot.com\",\r\n    messagingSenderId: \"36747933905\",\r\n    appId: \"1:36747933905:web:122ca2988b6518f971edf0\",\r\n    measurementId: \"G-9M0P1RK4EL\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","\r\nexport const fileUpload = async( file ) => {\r\n    \r\n    const cloudUrl = ' https://api.cloudinary.com/v1_1/dhrchyk6n/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append( 'file', file)\r\n\r\n    try {\r\n\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            console.log(cloudResp)\r\n            return cloudResp.secure_url\r\n        }else{\r\n            throw await resp.json;\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n    //return url\r\n\r\n}\r\n","import {db} from '../firebase/firebase-config';\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const noteSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    //console.log(uid)\r\n    const notes = [];\r\n\r\n    noteSnap.forEach( snapChild => {\r\n\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n\r\n}","\r\nexport const types =  {\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Notes',\r\n    notesActive: '[Notes] Set active notes',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport {db} from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startNewAdd = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes/`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note) => ({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const addNewNote = ( id, note ) =>({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        //console.log(typeof notes)\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) =>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n       // dispatch( startLoadingNotes( uid ) );\r\n        // Deberia ser el siguiente dispatch, pero hay un problema con los objetos y arrays\r\n        dispatch( refreshNote( note.id, note) );\r\n\r\n        Swal.fire( 'Saved', note.title, 'success')\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) =>{\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please await...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote( activeNote) );\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    //get State viene de Thunk\r\n    return async( dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n        dispatch( startLoadingNotes( uid ) );\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id   \r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) =>{\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset]; \r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NoteAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () =>{\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n        console.log(e.target.files);\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n\r\n            <span>28 de agosto de 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={ handlePicture }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NoteAppBar } from './NoteAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, {...formValues}) );\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NoteAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                    name=\"title\"\r\n                />\r\n                <textarea\r\n                    placeholder=\"Whats happened today.\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                    name=\"body\"\r\n                >\r\n                </textarea>\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select Somthing    \r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = ( ) => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = ( ) => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ( ) => ({\r\n    type: types.uiFinishLoading\r\n})","import { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    return ( dispatch ) => {\r\n        \r\n        dispatch(\r\n            startLoading()\r\n        );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password)\r\n            .then( ({ user }) =>{\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n                dispatch(\r\n                    finishLoading()\r\n                );\r\n            })\r\n            .catch( e =>{\r\n                console.log(e)\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return ( dispatch ) =>{\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async({ user })=>{\r\n                \r\n                await user.updateProfile({ displayName: name })\r\n                \r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch( e =>{\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n};\r\n\r\nexport const startLoginGoogle = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) =>{\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n\r\n    }\r\n};\r\n\r\nexport const login = ( uid,displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = ( ) => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () =>{\r\n\r\n        dispatch( \r\n            activeNote(id, {\r\n                date,\r\n                title,\r\n                body,\r\n                url\r\n            } ) \r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${ url })` \r\n                }}    \r\n                >\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{ title }</p>\r\n                <p className=\"journal__entry-content\">{ body }</p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note =>(\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        {...note} \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewAdd } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () =>{\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () =>{\r\n        dispatch( startNewAdd() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }    \r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\" />\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes )\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                { (active)\r\n                    ? <NoteScreen />\r\n                    : <NothingSelected /> \r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLoginEmailPassword, startLoginGoogle } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'marcos@gmail.com',\r\n        password: '123456'\r\n    })\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startLoginGoogle() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"atuh__title\">Login</h3>\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n            </form>\r\n            \r\n            <div className=\"auth__social-networks\">\r\n                <p>Login with social networks</p>\r\n                <div \r\n                    className=\"google-btn\"\r\n                    onClick={ handleGoogleLogin }\r\n                >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                    <p className=\"btn-text\">\r\n                        Sign in with google\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <Link to=\"/auth/register\"\r\n                className=\"link\"\r\n            >\r\n                Create a new account\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui )\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Marcos',\r\n        email: 'marcos@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        //dispatch( startLoginEmailPassword( email, password ) );\r\n        \r\n        if (isFormValid()) {\r\n            \r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required') )\r\n            //console.log('name is required')\r\n            return false;\r\n        }else if ( !validator.isEmail( email )) {\r\n            dispatch( setError('Email isnt valid') )\r\n            //console.log( 'Email isnt valid' )\r\n            return false;\r\n        }else if ( password !== password2 || password.length <= 5 ){\r\n            dispatch( setError('Passwords incorrect') )\r\n            //console.log( 'Passwords incorrect' )\r\n            return false;\r\n        }\r\n        \r\n        dispatch( removeError() )\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"atuh__title\">Register</h3>\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        {\r\n                            msgError\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ name }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ email }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm your Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password2 }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n            </form>\r\n            \r\n            <Link to=\"/auth/login\"\r\n                className=\"link\"\r\n            >\r\n                Already register?\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoutes = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) =>(\r\n                (!isLoggedIn)\r\n                    ?(<Component { ...props }/>)\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoutes = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) =>(\r\n                (isLoggedIn)\r\n                    ? (<Component { ...props }/>)\r\n                    : (<Redirect to=\"/auth/login\"/>)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoutes.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { firebase } from '../firebase/firebase-config';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoutes } from './PublicRoutes';\r\nimport { PrivateRoutes } from './PrivateRoutes';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( async(user) =>{\r\n            \r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                console.log(user.uid)\r\n                //Aca es la primera vez que tenemos contacto con el uid\r\n                //await \r\n                dispatch( startLoadingNotes( user.uid ) );\r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n            setChecking(false);\r\n        });\r\n\r\n    }, [dispatch, setChecking])\r\n\r\n    if (checking) {\r\n        return (\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container\">\r\n                <h1 className=\"atuh__title\">Wait...</h1>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoutes \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isLoggedIn={ isLoggedIn } \r\n                    />\r\n\r\n                    <PrivateRoutes\r\n                        exact\r\n                        path=\"/\" \r\n                        component={ JournalScreen }\r\n                        isLoggedIn={ isLoggedIn } \r\n                    />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n        \r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload,\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes:[\r\n                    ...action.payload\r\n                ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            } \r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            } \r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            } \r\n            \r\n        default:\r\n            return state; \r\n    }\r\n\r\n}","\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n \r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return{ }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter /> \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}